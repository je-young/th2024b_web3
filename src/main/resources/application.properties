# ======================== 개발 =======================================
## 1. JDBC URL, 스프링 웹 데이터베이스 생성: create database springweb2;
## - 드라이버 클래스 이름
#spring.datasource.driverClassName = com.mysql.cj.jdbc.Driver
## - 데이터베이스 URL
#spring.datasource.url = jdbc:mysql://localhost:3306/springweb2
## - 데이터베이스 아이디
#spring.datasource.username = root
## - 데이터베이스 비밀번호
#spring.datasource.password = 2965
#
## 2. JPA DDL 자동 생성 설정, 옵션: create, alter, drop, none
## - create : 서버가 실행 될때마다 기존 테이블 삭제하고 새로운 테이블 생성한다.[개발단계]
## - update : 서버가 실행 될때마다 기존 테이블 유지하고 변경/추가 사항이 있을경우 수정/생성한다.[배포단계]
## - none : 개발자가 직접 DDL 관리하겠다 (기본값)
## - create-drop : 서버가 종료 될때마다 테이블 삭제한다.
## - validate : 서버가 실행 될때마다 엔티티 일치 여부 검사한다.
#spring.jpa.hibernate.ddl-auto = create
#
## 3. JPA SQL 콘솔 출력 설정
## - JPA가 처리한 SQL을 콘솔에 출력한다.
#spring.jpa.show-sql = true
## - SQL을 형식에 맞게 변환하여 콘솔에 출력한다.
#spring.jpa.properties.hibernate.format_sql = true
#
## 4. JPA SQL 콘솔 출력 설정 - DML(INSERT, UPDATE, DELETE) 쿼리만 출력
## - JPA가 처리한 SQL을 디버그 레벨로 콘솔에 출력한다.
#logging.level.org.hibernate.SQL = DEBUG
## - JPA가 처리한 SQL의 매개변수를 트레이스 레벨로 콘솔에 출력한다.
#logging.level.org.hibernate.orm.jdbc.bind = TRACE

# ======================== 배포 =======================================
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.url=jdbc:h2:mem:springweb2
spring.datasource.username=sa
spring.datasource.password=
# h2에 접속하는 방법 설정
spring.h2.console.enabled = true
spring.h2.console.path=/h2-console

# koyeb 에서 사용하는 port 설정
server.port=${PORT:8080}
