[ Redis ]
    1. 정의 : 인메모리 데이터 저장소
        -> PC본체( CPU[연산처리] , RAM[휘발성메모리] , ROM/SSD/HDD[비휘발성메모리] )
        RAM[휘발성메모리] : 실행중 상태에서만 메모리 저장
        ROM/SSD/HDD[비휘발성메모리/보조기억장치] : 비실행중 상태에서만 메모리 저장 , 게임 설치 , C:
        -> 보조기억장치 보다 주기억장치가 빠르다.

    2. 목적 : 관계형데이터베이스(MySQL)가 보조기억장치 이므로 빠른 메모리를 사용할때 주기억장치가 필요할때 사용.
        -> 관계형데이터베이스(MySQL) : SQL(질의어)
        -> 비정형데이터베이스(몽고DB/Redis) : NoSQL( 객체 형식 - set/get )

    3. 구조 : key-value [ map비슷 , json비슷 ]

    4. 차이점 : Redis vs RDB
        - Redis : 휘발성메모리, 빠르다. , 종료시 초기활/영속화 , 단순 연결구조 , 단순 명령(NOSQL)
        - RDB : 비휘발성메모리, 느리다. , 종료시 유지 , 복잡한 연결구조(JDBC) , 복잡 명령(SQL)
        - 활용처 :
            영구저장 데이터(RDB) : 회원정보 , 게시물정보
            실시간 데이터(Redis) : 캐싱 , 로그인상태정보(세션/토큰) , 랭킹/순위 , 채팅 , 위치기반(좌표) 등등

    5. 캐싱 : Select 할때마다 데이터베이스의 접근/요청하면 빅데이터(100만개의레코드이상) 과부하/성능 저하
        -> DB에서 한번 조회한 결과를 redis에 저장(캐싱)하여 다음 조회할때 DB를 조회하지 않고 redis 조회하면 된다. 성능 향상

    6. 설치
        1. 윈도우 : https://github.com/microsoftarchive/redis/releases [ 강의 날짜 기준 : 3.0.504 ]
        2. 해당 버전 클릭 : Redis-64-3.0.504.zip, 5.6 MB, Jul 1, 2016
        3. 압축풀기 -> 압축 풀 폴더내 -> 'Redis-server.exe' 실행

        * 맥OS : 🍜 맥북 M3에 Redis 설치하는 두 가지 방법
                1. Homebrew로 설치하기 (추천!)
                🛠️ 설치 단계
                	1.	Homebrew 설치 확인
                        터미널을 열고 아래 명령어를 입력          : brew --version
                	2.	Redis 설치                         : brew install redis
                	3.	Redis 실행
                	    백그라운드에서 실행 (자동 시작 포함)       : brew services start redis
                	    포그라운드에서 실행 (테스트용)            : redis-server
                        이 경우 터미널을 닫으면 Redis도 종료됨.
                    4.	Redis 작동 확인                      : redis-cli ping
                        결과로 PONG이 나오면 성공!

    7. Spring Data Redis
        1. https://start.spring.io/
        2. 그래이들에 외부 redis 와 연동할 라이브러리 설치
            implementation 'org.springframework.boot:spring-boot-starter-data-redis'
        3. application.properties 파일 에서 ip와 port 기본 연동 설정
            spring.redis.host=localhost
            spring.redis.port=6379

    8. 주 사용법
        1. 레디스템플릿 객체를 생성한다.
            @Autowired
            private StringRedisTemplate stringRedisTemplate;

        2. 레디스에 데이터 저장하는 방법
            stringRedisTemplate.opsForXXX().set;
            1. stringRedisTemplate.opsForValue().set(key, value);
            -> TTL : Time To Live : 해당하는 데이터가 언제까지 유지할지 유효기간 정의.
                즉] TTL 이 지나면 해당 자료는 자동으로 삭제.
            stringRedisTemplate.opsForValue().set(key, value, 주기값, TimeUnit.패턴);

        3. 레디스에 데이터 호출하는 방법
            1. stringRedisTemplate.opsForValue().get(key);      : 특정한 key의 value 반환
            2. stringRedisTemplate.keys("*");                   : 모든 key를 반환
